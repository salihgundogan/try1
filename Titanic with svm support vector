{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":3136,"databundleVersionId":26502,"sourceType":"competition"}],"dockerImageVersionId":31089,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-08-13T06:51:22.095041Z","iopub.execute_input":"2025-08-13T06:51:22.095358Z","iopub.status.idle":"2025-08-13T06:51:22.100300Z","shell.execute_reply.started":"2025-08-13T06:51:22.095337Z","shell.execute_reply":"2025-08-13T06:51:22.098972Z"}},"outputs":[],"execution_count":25},{"cell_type":"code","source":"train = pd.read_csv('/kaggle/input/titanic/train.csv')\ntest = pd.read_csv('/kaggle/input/titanic/test.csv')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-13T06:51:22.102056Z","iopub.execute_input":"2025-08-13T06:51:22.102354Z","iopub.status.idle":"2025-08-13T06:51:22.129635Z","shell.execute_reply.started":"2025-08-13T06:51:22.102333Z","shell.execute_reply":"2025-08-13T06:51:22.128632Z"}},"outputs":[],"execution_count":26},{"cell_type":"code","source":"train.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-13T06:51:22.130868Z","iopub.execute_input":"2025-08-13T06:51:22.131118Z","iopub.status.idle":"2025-08-13T06:51:22.144127Z","shell.execute_reply.started":"2025-08-13T06:51:22.131099Z","shell.execute_reply":"2025-08-13T06:51:22.143093Z"}},"outputs":[{"execution_count":27,"output_type":"execute_result","data":{"text/plain":"   PassengerId  Survived  Pclass  \\\n0            1         0       3   \n1            2         1       1   \n2            3         1       3   \n3            4         1       1   \n4            5         0       3   \n\n                                                Name     Sex   Age  SibSp  \\\n0                            Braund, Mr. Owen Harris    male  22.0      1   \n1  Cumings, Mrs. John Bradley (Florence Briggs Th...  female  38.0      1   \n2                             Heikkinen, Miss. Laina  female  26.0      0   \n3       Futrelle, Mrs. Jacques Heath (Lily May Peel)  female  35.0      1   \n4                           Allen, Mr. William Henry    male  35.0      0   \n\n   Parch            Ticket     Fare Cabin Embarked  \n0      0         A/5 21171   7.2500   NaN        S  \n1      0          PC 17599  71.2833   C85        C  \n2      0  STON/O2. 3101282   7.9250   NaN        S  \n3      0            113803  53.1000  C123        S  \n4      0            373450   8.0500   NaN        S  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>PassengerId</th>\n      <th>Survived</th>\n      <th>Pclass</th>\n      <th>Name</th>\n      <th>Sex</th>\n      <th>Age</th>\n      <th>SibSp</th>\n      <th>Parch</th>\n      <th>Ticket</th>\n      <th>Fare</th>\n      <th>Cabin</th>\n      <th>Embarked</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>0</td>\n      <td>3</td>\n      <td>Braund, Mr. Owen Harris</td>\n      <td>male</td>\n      <td>22.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>A/5 21171</td>\n      <td>7.2500</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n      <td>female</td>\n      <td>38.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>PC 17599</td>\n      <td>71.2833</td>\n      <td>C85</td>\n      <td>C</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>1</td>\n      <td>3</td>\n      <td>Heikkinen, Miss. Laina</td>\n      <td>female</td>\n      <td>26.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>STON/O2. 3101282</td>\n      <td>7.9250</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>1</td>\n      <td>1</td>\n      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n      <td>female</td>\n      <td>35.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>113803</td>\n      <td>53.1000</td>\n      <td>C123</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>0</td>\n      <td>3</td>\n      <td>Allen, Mr. William Henry</td>\n      <td>male</td>\n      <td>35.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>373450</td>\n      <td>8.0500</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":27},{"cell_type":"code","source":"cols = ['Survived','Pclass','Sex','Age','Fare']\nX_f = train[cols].copy()\nT_f = test[['Pclass','Sex','Age','Fare']].copy()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-13T06:51:22.146284Z","iopub.execute_input":"2025-08-13T06:51:22.146950Z","iopub.status.idle":"2025-08-13T06:51:22.162099Z","shell.execute_reply.started":"2025-08-13T06:51:22.146927Z","shell.execute_reply":"2025-08-13T06:51:22.161174Z"}},"outputs":[],"execution_count":28},{"cell_type":"code","source":"X_f","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-13T06:51:22.163026Z","iopub.execute_input":"2025-08-13T06:51:22.163323Z","iopub.status.idle":"2025-08-13T06:51:22.184177Z","shell.execute_reply.started":"2025-08-13T06:51:22.163296Z","shell.execute_reply":"2025-08-13T06:51:22.183081Z"}},"outputs":[{"name":"stderr","text":"/usr/local/lib/python3.11/dist-packages/pandas/io/formats/format.py:1458: RuntimeWarning: invalid value encountered in greater\n  has_large_values = (abs_vals > 1e6).any()\n/usr/local/lib/python3.11/dist-packages/pandas/io/formats/format.py:1459: RuntimeWarning: invalid value encountered in less\n  has_small_values = ((abs_vals < 10 ** (-self.digits)) & (abs_vals > 0)).any()\n/usr/local/lib/python3.11/dist-packages/pandas/io/formats/format.py:1459: RuntimeWarning: invalid value encountered in greater\n  has_small_values = ((abs_vals < 10 ** (-self.digits)) & (abs_vals > 0)).any()\n","output_type":"stream"},{"execution_count":29,"output_type":"execute_result","data":{"text/plain":"     Survived  Pclass     Sex   Age     Fare\n0           0       3    male  22.0   7.2500\n1           1       1  female  38.0  71.2833\n2           1       3  female  26.0   7.9250\n3           1       1  female  35.0  53.1000\n4           0       3    male  35.0   8.0500\n..        ...     ...     ...   ...      ...\n886         0       2    male  27.0  13.0000\n887         1       1  female  19.0  30.0000\n888         0       3  female   NaN  23.4500\n889         1       1    male  26.0  30.0000\n890         0       3    male  32.0   7.7500\n\n[891 rows x 5 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Survived</th>\n      <th>Pclass</th>\n      <th>Sex</th>\n      <th>Age</th>\n      <th>Fare</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>22.0</td>\n      <td>7.2500</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>1</td>\n      <td>female</td>\n      <td>38.0</td>\n      <td>71.2833</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n      <td>3</td>\n      <td>female</td>\n      <td>26.0</td>\n      <td>7.9250</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1</td>\n      <td>1</td>\n      <td>female</td>\n      <td>35.0</td>\n      <td>53.1000</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>35.0</td>\n      <td>8.0500</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>886</th>\n      <td>0</td>\n      <td>2</td>\n      <td>male</td>\n      <td>27.0</td>\n      <td>13.0000</td>\n    </tr>\n    <tr>\n      <th>887</th>\n      <td>1</td>\n      <td>1</td>\n      <td>female</td>\n      <td>19.0</td>\n      <td>30.0000</td>\n    </tr>\n    <tr>\n      <th>888</th>\n      <td>0</td>\n      <td>3</td>\n      <td>female</td>\n      <td>NaN</td>\n      <td>23.4500</td>\n    </tr>\n    <tr>\n      <th>889</th>\n      <td>1</td>\n      <td>1</td>\n      <td>male</td>\n      <td>26.0</td>\n      <td>30.0000</td>\n    </tr>\n    <tr>\n      <th>890</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>32.0</td>\n      <td>7.7500</td>\n    </tr>\n  </tbody>\n</table>\n<p>891 rows Ã— 5 columns</p>\n</div>"},"metadata":{}}],"execution_count":29},{"cell_type":"code","source":"T_f","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-13T06:51:22.185036Z","iopub.execute_input":"2025-08-13T06:51:22.185357Z","iopub.status.idle":"2025-08-13T06:51:22.206981Z","shell.execute_reply.started":"2025-08-13T06:51:22.185336Z","shell.execute_reply":"2025-08-13T06:51:22.205973Z"}},"outputs":[{"name":"stderr","text":"/usr/local/lib/python3.11/dist-packages/pandas/io/formats/format.py:1458: RuntimeWarning: invalid value encountered in greater\n  has_large_values = (abs_vals > 1e6).any()\n/usr/local/lib/python3.11/dist-packages/pandas/io/formats/format.py:1459: RuntimeWarning: invalid value encountered in less\n  has_small_values = ((abs_vals < 10 ** (-self.digits)) & (abs_vals > 0)).any()\n/usr/local/lib/python3.11/dist-packages/pandas/io/formats/format.py:1459: RuntimeWarning: invalid value encountered in greater\n  has_small_values = ((abs_vals < 10 ** (-self.digits)) & (abs_vals > 0)).any()\n","output_type":"stream"},{"execution_count":30,"output_type":"execute_result","data":{"text/plain":"     Pclass     Sex   Age      Fare\n0         3    male  34.5    7.8292\n1         3  female  47.0    7.0000\n2         2    male  62.0    9.6875\n3         3    male  27.0    8.6625\n4         3  female  22.0   12.2875\n..      ...     ...   ...       ...\n413       3    male   NaN    8.0500\n414       1  female  39.0  108.9000\n415       3    male  38.5    7.2500\n416       3    male   NaN    8.0500\n417       3    male   NaN   22.3583\n\n[418 rows x 4 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Pclass</th>\n      <th>Sex</th>\n      <th>Age</th>\n      <th>Fare</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>3</td>\n      <td>male</td>\n      <td>34.5</td>\n      <td>7.8292</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>3</td>\n      <td>female</td>\n      <td>47.0</td>\n      <td>7.0000</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>male</td>\n      <td>62.0</td>\n      <td>9.6875</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>male</td>\n      <td>27.0</td>\n      <td>8.6625</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>3</td>\n      <td>female</td>\n      <td>22.0</td>\n      <td>12.2875</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>413</th>\n      <td>3</td>\n      <td>male</td>\n      <td>NaN</td>\n      <td>8.0500</td>\n    </tr>\n    <tr>\n      <th>414</th>\n      <td>1</td>\n      <td>female</td>\n      <td>39.0</td>\n      <td>108.9000</td>\n    </tr>\n    <tr>\n      <th>415</th>\n      <td>3</td>\n      <td>male</td>\n      <td>38.5</td>\n      <td>7.2500</td>\n    </tr>\n    <tr>\n      <th>416</th>\n      <td>3</td>\n      <td>male</td>\n      <td>NaN</td>\n      <td>8.0500</td>\n    </tr>\n    <tr>\n      <th>417</th>\n      <td>3</td>\n      <td>male</td>\n      <td>NaN</td>\n      <td>22.3583</td>\n    </tr>\n  </tbody>\n</table>\n<p>418 rows Ã— 4 columns</p>\n</div>"},"metadata":{}}],"execution_count":30},{"cell_type":"code","source":"from sklearn.preprocessing import LabelEncoder","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-13T06:51:22.207946Z","iopub.execute_input":"2025-08-13T06:51:22.208228Z","iopub.status.idle":"2025-08-13T06:51:22.220377Z","shell.execute_reply.started":"2025-08-13T06:51:22.208195Z","shell.execute_reply":"2025-08-13T06:51:22.219314Z"}},"outputs":[],"execution_count":31},{"cell_type":"code","source":"train_encoder = LabelEncoder()\ntest_encoder = LabelEncoder()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-13T06:51:22.221280Z","iopub.execute_input":"2025-08-13T06:51:22.221586Z","iopub.status.idle":"2025-08-13T06:51:22.236540Z","shell.execute_reply.started":"2025-08-13T06:51:22.221560Z","shell.execute_reply":"2025-08-13T06:51:22.235532Z"}},"outputs":[],"execution_count":32},{"cell_type":"code","source":"X_f['Sex_n'] = train_encoder.fit_transform(X_f['Sex'])\nT_f['Sex_n'] = test_encoder.fit_transform(T_f['Sex'])","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-13T06:51:22.237468Z","iopub.execute_input":"2025-08-13T06:51:22.237716Z","iopub.status.idle":"2025-08-13T06:51:22.255146Z","shell.execute_reply.started":"2025-08-13T06:51:22.237697Z","shell.execute_reply":"2025-08-13T06:51:22.254093Z"}},"outputs":[],"execution_count":33},{"cell_type":"code","source":"X_f","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-13T06:51:22.258655Z","iopub.execute_input":"2025-08-13T06:51:22.258949Z","iopub.status.idle":"2025-08-13T06:51:22.280552Z","shell.execute_reply.started":"2025-08-13T06:51:22.258925Z","shell.execute_reply":"2025-08-13T06:51:22.279397Z"}},"outputs":[{"name":"stderr","text":"/usr/local/lib/python3.11/dist-packages/pandas/io/formats/format.py:1458: RuntimeWarning: invalid value encountered in greater\n  has_large_values = (abs_vals > 1e6).any()\n/usr/local/lib/python3.11/dist-packages/pandas/io/formats/format.py:1459: RuntimeWarning: invalid value encountered in less\n  has_small_values = ((abs_vals < 10 ** (-self.digits)) & (abs_vals > 0)).any()\n/usr/local/lib/python3.11/dist-packages/pandas/io/formats/format.py:1459: RuntimeWarning: invalid value encountered in greater\n  has_small_values = ((abs_vals < 10 ** (-self.digits)) & (abs_vals > 0)).any()\n","output_type":"stream"},{"execution_count":34,"output_type":"execute_result","data":{"text/plain":"     Survived  Pclass     Sex   Age     Fare  Sex_n\n0           0       3    male  22.0   7.2500      1\n1           1       1  female  38.0  71.2833      0\n2           1       3  female  26.0   7.9250      0\n3           1       1  female  35.0  53.1000      0\n4           0       3    male  35.0   8.0500      1\n..        ...     ...     ...   ...      ...    ...\n886         0       2    male  27.0  13.0000      1\n887         1       1  female  19.0  30.0000      0\n888         0       3  female   NaN  23.4500      0\n889         1       1    male  26.0  30.0000      1\n890         0       3    male  32.0   7.7500      1\n\n[891 rows x 6 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Survived</th>\n      <th>Pclass</th>\n      <th>Sex</th>\n      <th>Age</th>\n      <th>Fare</th>\n      <th>Sex_n</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>22.0</td>\n      <td>7.2500</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>1</td>\n      <td>female</td>\n      <td>38.0</td>\n      <td>71.2833</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n      <td>3</td>\n      <td>female</td>\n      <td>26.0</td>\n      <td>7.9250</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1</td>\n      <td>1</td>\n      <td>female</td>\n      <td>35.0</td>\n      <td>53.1000</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>35.0</td>\n      <td>8.0500</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>886</th>\n      <td>0</td>\n      <td>2</td>\n      <td>male</td>\n      <td>27.0</td>\n      <td>13.0000</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>887</th>\n      <td>1</td>\n      <td>1</td>\n      <td>female</td>\n      <td>19.0</td>\n      <td>30.0000</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>888</th>\n      <td>0</td>\n      <td>3</td>\n      <td>female</td>\n      <td>NaN</td>\n      <td>23.4500</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>889</th>\n      <td>1</td>\n      <td>1</td>\n      <td>male</td>\n      <td>26.0</td>\n      <td>30.0000</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>890</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>32.0</td>\n      <td>7.7500</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n<p>891 rows Ã— 6 columns</p>\n</div>"},"metadata":{}}],"execution_count":34},{"cell_type":"code","source":"T_f","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-13T06:51:22.281429Z","iopub.execute_input":"2025-08-13T06:51:22.281972Z","iopub.status.idle":"2025-08-13T06:51:22.301994Z","shell.execute_reply.started":"2025-08-13T06:51:22.281952Z","shell.execute_reply":"2025-08-13T06:51:22.300987Z"}},"outputs":[{"name":"stderr","text":"/usr/local/lib/python3.11/dist-packages/pandas/io/formats/format.py:1458: RuntimeWarning: invalid value encountered in greater\n  has_large_values = (abs_vals > 1e6).any()\n/usr/local/lib/python3.11/dist-packages/pandas/io/formats/format.py:1459: RuntimeWarning: invalid value encountered in less\n  has_small_values = ((abs_vals < 10 ** (-self.digits)) & (abs_vals > 0)).any()\n/usr/local/lib/python3.11/dist-packages/pandas/io/formats/format.py:1459: RuntimeWarning: invalid value encountered in greater\n  has_small_values = ((abs_vals < 10 ** (-self.digits)) & (abs_vals > 0)).any()\n","output_type":"stream"},{"execution_count":35,"output_type":"execute_result","data":{"text/plain":"     Pclass     Sex   Age      Fare  Sex_n\n0         3    male  34.5    7.8292      1\n1         3  female  47.0    7.0000      0\n2         2    male  62.0    9.6875      1\n3         3    male  27.0    8.6625      1\n4         3  female  22.0   12.2875      0\n..      ...     ...   ...       ...    ...\n413       3    male   NaN    8.0500      1\n414       1  female  39.0  108.9000      0\n415       3    male  38.5    7.2500      1\n416       3    male   NaN    8.0500      1\n417       3    male   NaN   22.3583      1\n\n[418 rows x 5 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Pclass</th>\n      <th>Sex</th>\n      <th>Age</th>\n      <th>Fare</th>\n      <th>Sex_n</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>3</td>\n      <td>male</td>\n      <td>34.5</td>\n      <td>7.8292</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>3</td>\n      <td>female</td>\n      <td>47.0</td>\n      <td>7.0000</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>male</td>\n      <td>62.0</td>\n      <td>9.6875</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>male</td>\n      <td>27.0</td>\n      <td>8.6625</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>3</td>\n      <td>female</td>\n      <td>22.0</td>\n      <td>12.2875</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>413</th>\n      <td>3</td>\n      <td>male</td>\n      <td>NaN</td>\n      <td>8.0500</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>414</th>\n      <td>1</td>\n      <td>female</td>\n      <td>39.0</td>\n      <td>108.9000</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>415</th>\n      <td>3</td>\n      <td>male</td>\n      <td>38.5</td>\n      <td>7.2500</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>416</th>\n      <td>3</td>\n      <td>male</td>\n      <td>NaN</td>\n      <td>8.0500</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>417</th>\n      <td>3</td>\n      <td>male</td>\n      <td>NaN</td>\n      <td>22.3583</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n<p>418 rows Ã— 5 columns</p>\n</div>"},"metadata":{}}],"execution_count":35},{"cell_type":"code","source":"X_test = T_f.drop(['Sex'],axis='columns')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-13T06:51:22.303017Z","iopub.execute_input":"2025-08-13T06:51:22.303681Z","iopub.status.idle":"2025-08-13T06:51:22.319730Z","shell.execute_reply.started":"2025-08-13T06:51:22.303652Z","shell.execute_reply":"2025-08-13T06:51:22.318885Z"}},"outputs":[],"execution_count":36},{"cell_type":"code","source":"X_train = X_f.drop(['Survived','Sex'],axis='columns')\ny_train = X_f.Survived","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-13T06:51:22.320807Z","iopub.execute_input":"2025-08-13T06:51:22.321066Z","iopub.status.idle":"2025-08-13T06:51:22.336459Z","shell.execute_reply.started":"2025-08-13T06:51:22.321046Z","shell.execute_reply":"2025-08-13T06:51:22.335614Z"}},"outputs":[],"execution_count":37},{"cell_type":"code","source":"X_train[X_train.isna().any(axis=1)==True]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-13T06:51:22.337652Z","iopub.execute_input":"2025-08-13T06:51:22.338494Z","iopub.status.idle":"2025-08-13T06:51:22.359730Z","shell.execute_reply.started":"2025-08-13T06:51:22.338458Z","shell.execute_reply":"2025-08-13T06:51:22.358720Z"}},"outputs":[{"name":"stderr","text":"/usr/local/lib/python3.11/dist-packages/pandas/io/formats/format.py:1458: RuntimeWarning: invalid value encountered in greater\n  has_large_values = (abs_vals > 1e6).any()\n/usr/local/lib/python3.11/dist-packages/pandas/io/formats/format.py:1459: RuntimeWarning: invalid value encountered in less\n  has_small_values = ((abs_vals < 10 ** (-self.digits)) & (abs_vals > 0)).any()\n/usr/local/lib/python3.11/dist-packages/pandas/io/formats/format.py:1459: RuntimeWarning: invalid value encountered in greater\n  has_small_values = ((abs_vals < 10 ** (-self.digits)) & (abs_vals > 0)).any()\n","output_type":"stream"},{"execution_count":38,"output_type":"execute_result","data":{"text/plain":"     Pclass  Age     Fare  Sex_n\n5         3  NaN   8.4583      1\n17        2  NaN  13.0000      1\n19        3  NaN   7.2250      0\n26        3  NaN   7.2250      1\n28        3  NaN   7.8792      0\n..      ...  ...      ...    ...\n859       3  NaN   7.2292      1\n863       3  NaN  69.5500      0\n868       3  NaN   9.5000      1\n878       3  NaN   7.8958      1\n888       3  NaN  23.4500      0\n\n[177 rows x 4 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Pclass</th>\n      <th>Age</th>\n      <th>Fare</th>\n      <th>Sex_n</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>5</th>\n      <td>3</td>\n      <td>NaN</td>\n      <td>8.4583</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>2</td>\n      <td>NaN</td>\n      <td>13.0000</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>3</td>\n      <td>NaN</td>\n      <td>7.2250</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>3</td>\n      <td>NaN</td>\n      <td>7.2250</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>28</th>\n      <td>3</td>\n      <td>NaN</td>\n      <td>7.8792</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>859</th>\n      <td>3</td>\n      <td>NaN</td>\n      <td>7.2292</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>863</th>\n      <td>3</td>\n      <td>NaN</td>\n      <td>69.5500</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>868</th>\n      <td>3</td>\n      <td>NaN</td>\n      <td>9.5000</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>878</th>\n      <td>3</td>\n      <td>NaN</td>\n      <td>7.8958</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>888</th>\n      <td>3</td>\n      <td>NaN</td>\n      <td>23.4500</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>177 rows Ã— 4 columns</p>\n</div>"},"metadata":{}}],"execution_count":38},{"cell_type":"code","source":"X_train.Age.mean()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-13T06:51:22.360716Z","iopub.execute_input":"2025-08-13T06:51:22.360998Z","iopub.status.idle":"2025-08-13T06:51:22.376060Z","shell.execute_reply.started":"2025-08-13T06:51:22.360974Z","shell.execute_reply":"2025-08-13T06:51:22.375318Z"}},"outputs":[{"execution_count":39,"output_type":"execute_result","data":{"text/plain":"29.69911764705882"},"metadata":{}}],"execution_count":39},{"cell_type":"code","source":"X_train.fillna(30,inplace=True)\nX_test.fillna(30,inplace=True)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-13T06:51:22.376912Z","iopub.execute_input":"2025-08-13T06:51:22.377199Z","iopub.status.idle":"2025-08-13T06:51:22.390834Z","shell.execute_reply.started":"2025-08-13T06:51:22.377172Z","shell.execute_reply":"2025-08-13T06:51:22.390022Z"}},"outputs":[],"execution_count":40},{"cell_type":"code","source":"from sklearn.tree import DecisionTreeClassifier\nmodel = DecisionTreeClassifier()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-13T06:51:22.391640Z","iopub.execute_input":"2025-08-13T06:51:22.391930Z","iopub.status.idle":"2025-08-13T06:51:22.405773Z","shell.execute_reply.started":"2025-08-13T06:51:22.391904Z","shell.execute_reply":"2025-08-13T06:51:22.404928Z"}},"outputs":[],"execution_count":41},{"cell_type":"code","source":"model.fit(X_train, y_train)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-13T06:51:22.407122Z","iopub.execute_input":"2025-08-13T06:51:22.407514Z","iopub.status.idle":"2025-08-13T06:51:22.430122Z","shell.execute_reply.started":"2025-08-13T06:51:22.407482Z","shell.execute_reply":"2025-08-13T06:51:22.429187Z"}},"outputs":[{"execution_count":42,"output_type":"execute_result","data":{"text/plain":"DecisionTreeClassifier()","text/html":"<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>DecisionTreeClassifier()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">DecisionTreeClassifier</label><div class=\"sk-toggleable__content\"><pre>DecisionTreeClassifier()</pre></div></div></div></div></div>"},"metadata":{}}],"execution_count":42},{"cell_type":"code","source":"model.predict(X_test)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-13T06:51:22.430989Z","iopub.execute_input":"2025-08-13T06:51:22.431297Z","iopub.status.idle":"2025-08-13T06:51:22.447384Z","shell.execute_reply.started":"2025-08-13T06:51:22.431248Z","shell.execute_reply":"2025-08-13T06:51:22.446504Z"}},"outputs":[{"execution_count":43,"output_type":"execute_result","data":{"text/plain":"array([0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1,\n       1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1,\n       1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1,\n       1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1,\n       1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0,\n       0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0,\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1,\n       0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1,\n       1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0,\n       0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0,\n       1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1,\n       1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1,\n       0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0,\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1,\n       1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0,\n       1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0,\n       0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0,\n       1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1,\n       0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0])"},"metadata":{}}],"execution_count":43},{"cell_type":"code","source":"predictions = model.predict(X_test)\n\noutput = pd.DataFrame({\n    'PassengerId': test.loc[X_test.index, 'PassengerId'],\n    'Survived': predictions\n})\n\noutput.to_csv('submission.csv', index=False)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-13T06:51:22.448327Z","iopub.execute_input":"2025-08-13T06:51:22.448844Z","iopub.status.idle":"2025-08-13T06:51:22.464856Z","shell.execute_reply.started":"2025-08-13T06:51:22.448821Z","shell.execute_reply":"2025-08-13T06:51:22.463954Z"}},"outputs":[],"execution_count":44},{"cell_type":"code","source":"output","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-13T06:51:22.465751Z","iopub.execute_input":"2025-08-13T06:51:22.466021Z","iopub.status.idle":"2025-08-13T06:51:22.484885Z","shell.execute_reply.started":"2025-08-13T06:51:22.465996Z","shell.execute_reply":"2025-08-13T06:51:22.483739Z"}},"outputs":[{"execution_count":45,"output_type":"execute_result","data":{"text/plain":"     PassengerId  Survived\n0            892         0\n1            893         0\n2            894         1\n3            895         1\n4            896         1\n..           ...       ...\n413         1305         0\n414         1306         1\n415         1307         0\n416         1308         0\n417         1309         0\n\n[418 rows x 2 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>PassengerId</th>\n      <th>Survived</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>892</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>893</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>894</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>895</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>896</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>413</th>\n      <td>1305</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>414</th>\n      <td>1306</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>415</th>\n      <td>1307</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>416</th>\n      <td>1308</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>417</th>\n      <td>1309</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>418 rows Ã— 2 columns</p>\n</div>"},"metadata":{}}],"execution_count":45}]}